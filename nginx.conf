
# #user  nobody;
# worker_processes  1;

# #error_log  logs/error.log;
# #error_log  logs/error.log  notice;
# #error_log  logs/error.log  info;

# #pid        logs/nginx.pid;


# events {
#     worker_connections  1024;
# }


# http {
#     include       mime.types;
#     default_type  application/octet-stream;

#     #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
#     #                  '$status $body_bytes_sent "$http_referer" '
#     #                  '"$http_user_agent" "$http_x_forwarded_for"';

#     #access_log  logs/access.log  main;

#     sendfile        on;
#     #tcp_nopush     on;

#     #keepalive_timeout  0;
#     keepalive_timeout  65;

#     #gzip  on;

#     server {
#         listen       80;
#         server_name  192.168.120.178;

#         #charset koi8-r;

#         #access_log  logs/host.access.log  main;

#         location / {
#             root   html;
#             index  index.html index.htm;
#         }

#         #error_page  404              /404.html;

#         # redirect server error pages to the static page /50x.html
#         #
#         error_page   500 502 503 504  /50x.html;
#         location = /50x.html {
#             root   html;
#         }

#         # proxy the PHP scripts to Apache listening on 127.0.0.1:80
#         #
#         location / {
#             add_header 'Access-Control-Allow-Origin' '*';
#             add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
#             add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
#             add_header 'Access-Control-Allow-Credentials' 'true';

#             # proxy:8882;
#             proxy_set_header Host $http_host; #后台可以获取到完整的ip+端口号
#             proxy_set_header X-Real-IP $remote_addr; #后台可以获取到用户访问的真实ip地址
#         }
#         location /sys2/ {
#             proxy_pass http://192.168.178.120:8881/;
#             proxy_set_header Host $http_host; #后台可以获取到完整的ip+端口号
#             proxy_set_header X-Real-IP $remote_addr; #后台可以获取到用户访问的真实ip地址
#         }
#         location /sys3/ {
#             alias  html/hos-page/index.html;
#             proxy_pass http://192.168.178.120:8886/;
#         }
#         # location sta-page/ {
#         #     alias  html/sta-page/index.html;
#         #     proxy_pass http://192.168.120.178:3330/sta-page;
#         # }
#         # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
#         #
#         #location ~ \.php$ {
#         #    root           html;
#         #    fastcgi_pass   127.0.0.1:9000;
#         #    fastcgi_index  index.php;
#         #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;s
#         #    include        fastcgi_params;
#         #}

#         # deny access to .htaccess files, if Apache's document root
#         # concurs with nginx's one
#         #
#         #location ~ /\.ht {
#         #    deny  all;
#         #}
#     }

#     server {
#         listen       8881;
#         server_name  192.168.120.178;

#         #charset koi8-r;

#         #access_log  logs/host.access.log  main;

#         location / {
#             root   html;
#             index  /sys2/index.html /sys2/index.htm;
#         }

#         #error_page  404              /404.html;

#         # redirect server error pages to the static page /50x.html
#         #
#         error_page   500 502 503 504  /50x.html;
#         location = /50x.html {
#             root   html;
#         }

#         # proxy the PHP scripts to Apache listening on 127.0.0.1:80
#         #
#         # location /hosApi/ {
#         #     proxy_pass http://192.168.110.15:180/;
#         #     proxy_set_header Host $http_host; #后台可以获取到完整的ip+端口号
#         #     proxy_set_header X-Real-IP $remote_addr; #后台可以获取到用户访问的真实ip地址
#         # }
#         # location /staApi/ {
#         #     proxy_pass http://192.168.110.15:181/;
#         #     proxy_set_header Host $http_host; #后台可以获取到完整的ip+端口号
#         #     proxy_set_header X-Real-IP $remote_addr; #后台可以获取到用户访问的真实ip地址
#         # }
#         # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
#         #
#         #location ~ \.php$ {
#         #    root           html;
#         #    fastcgi_pass   127.0.0.1:9000;
#         #    fastcgi_index  index.php;
#         #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
#         #    include        fastcgi_params;
#         #}

#         # deny access to .htaccess files, if Apache's document root
#         # concurs with nginx's one
#         #
#         #location ~ /\.ht {
#         #    deny  all;
#         #}
#     }
#     server {
#         listen       8883;
#         server_name  192.168.120.178;

#         #charset koi8-r;

#         #access_log  logs/host.access.log  main;

#         location / {
#             root   html;
#             index  /sys3/index.html /sys3/index.htm;
#         }

#         #error_page  404              /404.html;

#         # redirect server error pages to the static page /50x.html
#         #
#         error_page   500 502 503 504  /50x.html;
#         location = /50x.html {
#             root   html;
#         }

#         # proxy the PHP scripts to Apache listening on 127.0.0.1:80
#         #
#         # location /hosApi/ {
#         #     proxy_pass http://192.168.110.15:180/;
#         #     proxy_set_header Host $http_host; #后台可以获取到完整的ip+端口号
#         #     proxy_set_header X-Real-IP $remote_addr; #后台可以获取到用户访问的真实ip地址
#         # }
#         # location /staApi/ {
#         #     proxy_pass http://192.168.110.15:181/;
#         #     proxy_set_header Host $http_host; #后台可以获取到完整的ip+端口号
#         #     proxy_set_header X-Real-IP $remote_addr; #后台可以获取到用户访问的真实ip地址
#         # }
#         # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
#         #
#         #location ~ \.php$ {
#         #    root           html;
#         #    fastcgi_pass   127.0.0.1:9000;
#         #    fastcgi_index  index.php;
#         #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
#         #    include        fastcgi_params;
#         #}

#         # deny access to .htaccess files, if Apache's document root
#         # concurs with nginx's one
#         #
#         #location ~ /\.ht {
#         #    deny  all;
#         #}
#     }


#     # server {
#     #     listen       3333;
#     #     server_name  http://192.168.120.178;

#     #     #charset koi8-r;

#     #     #access_log  logs/host.access.log  main;

#     #     location /pda {
#     #         root   html;
#     #         index  /pda/index.html index.htm;
#     #     }

#     #     location /static/ {
#     #         root  "G://nginx-1.20.2/html/pda";
#     #     }

#     #     #error_page  404              /404.html;

#     #     # redirect server error pages to the static page /50x.html
#     #     #
#     #     error_page   500 502 503 504  /50x.html;
#     #     location = /50x.html {
#     #         root   html;
#     #     }

#     #     # proxy the PHP scripts to Apache listening on 127.0.0.1:80
#     #     #
#     #     location / {
#     #         proxy_pass http://192.168.110.15:180/;
#     #         proxy_set_header Host $http_host; #后台可以获取到完整的ip+端口号
#     #         proxy_set_header X-Real-IP $remote_addr; #后台可以获取到用户访问的真实ip地址
#     #     }
#     #     # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
#     #     #
#     #     #location ~ \.php$ {
#     #     #    root           html;
#     #     #    fastcgi_pass   127.0.0.1:9000;
#     #     #    fastcgi_index  index.php;
#     #     #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
#     #     #    include        fastcgi_params;
#     #     #}

#     #     # deny access to .htaccess files, if Apache's document root
#     #     # concurs with nginx's one
#     #     #
#     #     #location ~ /\.ht {
#     #     #    deny  all;
#     #     #}
#     # }
#     # another virtual host using mix of IP-, name-, and port-based configuration
#     #
#     #server {
#     #    listen       8000;
#     #    listen       somename:8080;
#     #    server_name  somename  alias  another.alias;

#     #    location / {
#     #        root   html;
#     #        index  index.html index.htm;
#     #    }
#     #}


#     # HTTPS server
#     #
#     #server {
#     #    listen       443 ssl;
#     #    server_name  localhost;

#     #    ssl_certificate      cert.pem;
#     #    ssl_certificate_key  cert.key;

#     #    ssl_session_cache    shared:SSL:1m;
#     #    ssl_session_timeout  5m;

#     #    ssl_ciphers  HIGH:!aNULL:!MD5;
#     #    ssl_prefer_server_ciphers  on;

#     #    location / {
#     #        root   html;
#     #        index  index.html index.htm;
#     #    }
#     #}

# }


#nginx.conf
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

  # 日志格式配置
  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';


    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0; 
    keepalive_timeout  65;

    #gzip  on;
    gzip on;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;


    server {
        #配置nginx启动的端口，服务器名字（本地localhost）
        listen       8882; 
        server_name  192.168.120.178;
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Headers X-Requested-With;
        add_header Access-Control-Allow-Methods GET,POST,OPTIONS;

        root  html;
        index  index.html index.htm;
        #charset koi8-r;

        # upstream backend_server {
        #     server mock.mengxuegu.com/mock;
        # }
        # access_log  logs/host.access.log  main;

        location /api/ {
            # rewrite ^/api/(.*) /v1/$1 break;
            proxy_pass https://mock.mengxuegu.com/mock/629d727e6163854a32e8307e/;
            proxy_set_header Host $http_host; #后台可以获取到完整的ip+端口号
            proxy_set_header X-Real-IP $remote_addr; #后台可以获取到用户访问的真实ip地址
        }
        #配置启动nginx后打开的静态文件html页面
        #静态文件一般是前端项目打包之后的dist文件（该文件下的html文件为启动页面）
        location / {
            # root  html;
            # index  index.html index.htm;
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
            add_header 'Access-Control-Allow-Credentials' 'true';
            error_page 404 = @purge_cache;
            try_files $uri $uri/ /index.html;
        }

        location /sys2/ {
            root  html;
            index  /sys2/index.html index.htm;
            proxy_set_header Host $http_host; #后台可以获取到完整的ip+端口号
            proxy_set_header X-Real-IP $remote_addr; #后台可以获取到用户访问的真实ip地址
            error_page 404 = @purge_cache;
            try_files $uri $uri/ /sys2/index.html;
        }
        location /sys3/ {
            root  html;
            index  /sys3/index.html index.htm;
            proxy_set_header Host $http_host; #后台可以获取到完整的ip+端口号
            proxy_set_header X-Real-IP $remote_addr; #后台可以获取到用户访问的真实ip地址
            error_page 404 = @purge_cache;
            try_files $uri $uri/ /sys3/index.html;
        }
        

        location = /favicon.ico {
            log_not_found off;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}

